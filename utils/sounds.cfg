#textdomain wesnoth-tdh

#define SOUND_SOURCE ID X Y SNDLIST TIMEOUT TRIGGER_CHANCE_P_VAL
    [sound_source]
        id={ID}
        x={X}
        y={Y}
        sounds={SNDLIST}
        delay={TIMEOUT}
        chance={TRIGGER_CHANCE_P_VAL}
    [/sound_source]
#enddef

#define CONTINUOUS_SOUND_SOURCE ID X Y SNDLIST
    {SOUND_SOURCE ({ID}) ({X}) ({Y}) ({SNDLIST}) (0) (100)}
#enddef

#define SOUND_SOURCE_RANGE FULL FADE
    [+sound_source]
        full_range={FULL}
        fade_range={FADE}
    [/sound_source]
#enddef

#define FADE_MUSIC_IN DURATION
    {VARIABLE fade_duration_remaining {DURATION}}
    [while] {VARIABLE_CONDITIONAL fade_duration_remaining greater_than 0}
        [do]
            {VARIABLE_OP fade_duration_remaining sub 100}
            {VARIABLE volume 100}
            {VARIABLE_OP volume multiply $fade_duration_remaining}
            {VARIABLE_OP volume divide {DURATION}}
            {VARIABLE volume "$(100-$volume)"}
            [volume]
                music=$volume
            [/volume]
            {DELAY 100}
        [/do]
    [/while]
    {CLEAR_VARIABLE fade_duration_remaining,volume}
#enddef

#define FADE_MUSIC_OUT DURATION
    {VARIABLE fade_duration_remaining {DURATION}}
    [while] {VARIABLE_CONDITIONAL fade_duration_remaining greater_than 0}
        [do]
            {VARIABLE_OP fade_duration_remaining sub 100}
            {VARIABLE volume 100}
            {VARIABLE_OP volume multiply $fade_duration_remaining}
            {VARIABLE_OP volume divide {DURATION}}
            [volume]
                music=$volume
            [/volume]
            {DELAY 100}
        [/do]
    [/while]
    {CLEAR_VARIABLE fade_duration_remaining,volume}
#enddef
